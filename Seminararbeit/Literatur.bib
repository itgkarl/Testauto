
@book{burnstein_practical_2003,
	address = {New York},
	edition = {Auflage: 2003},
	title = {Practical Software Testing: A Process-Oriented Approach},
	isbn = {9780387951317},
	shorttitle = {Practical Software Testing},
	abstract = {Based on the needs of the educational community, and the software professional, this book takes a unique approach to teaching software testing. It introduces testing concepts that are managerial, technical, and process oriented, using the Testing Maturity Model ({TMM}) as a guiding framework. The {TMM} levels and goals support a structured presentation of fundamental and advanced test-related concepts to the reader. In this context, the interrelationships between theoretical, technical, and managerial concepts become more apparent. In addition, relationships between the testing process, maturity goals, and such key players as managers, testers and client groups are introduced. Topics and features:- Process/engineering-oriented text- Promotes the growth and value of software testing as a profession- Introduces both technical and managerial aspects of testing in a clear and precise style- Uses the {TMM} framework to introduce testing concepts in a systemmatic, evolutionary way to faciliate understanding- Describes the role of testing tools and measurements, and how to integrate them into the testing process Graduate students and industry professionals will benefit from the book, which is designed for a graduate course in software testing, software quality assurance, or software validation and verification Moreover, the number of universities with graduate courses that cover this material will grow, given the evoluation in software development as an engineering discipline and the creation of degree programs in software engineering.},
	language = {Englisch},
	publisher = {Springer},
	author = {Burnstein, Ilene},
	month = jul,
	year = {2003}
}

@book{thaller_software-test_2002,
	address = {Hannover},
	edition = {2., aktualisierte und erw. Aufl.},
	title = {Software-Test},
	isbn = {3-88229-198-2},
	url = {http://fhmoz3.bib-bvb.de/InfoGuideClient.fhmsis/start.do?Login=wofhmze&Query=540="3-88229-198-2"},
	publisher = {Heise},
	author = {Thaller, Georg Erwin},
	year = {2002},
	file = {OPAC der Hochschule München:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\SDRTXECV\\singleHit.html:text/html}
}

@misc{chen_einfuhrung_2011,
	title = {Einführung eines Testprozesses},
	url = {http://www.inf.fu-berlin.de/inst/ag-se/theses/Chen11-testframework.pdf},
	author = {Chen, Lin},
	month = apr,
	year = {2011}
}

@inproceedings{bansal_taming_2013,
	title = {Taming complexity while gaining efficiency: Requirements for the next generation of test automation tools},
	shorttitle = {Taming complexity while gaining efficiency},
	doi = {10.1109/AUTEST.2013.6645055},
	abstract = {The current product development environment for mechatronic systems is characterized by tight budgets, reduced development times and immense complexity across the industries - aerospace, automotive, commercial vehicles, etc. A huge emphasis is being given to increase the efficiency in product testing and to make the process more productive in increasing quality, while being cost effective. Companies are seeking software testing tools that offer a comprehensive solution that helps in achieving this goal. Automated software testing for both hardware and the software components is one of the ways the industries are trying to gain efficiency in testing. Given the fact that current mechatronic systems are quite complex, have large numbers and types of {IO} channels, and are implementing distributed real-time control with multiple communication protocols, a test automation tool that incorporates and tests all of the system functionality is highly desirable. In particular, due to the focus on software quality, as more and more functions are added to the network of Electronic Control Units ({ECU}), a greater emphasis is laid on the requirements for a comprehensive automated testing tool. The efficiency in development and planned increase in reuse of test assets is an important consideration for efficiency gain. Bringing clarity to the test description would improve readability and maintainability of these test assets. This paper shows the lessons learned from a similar evolution in Model-Based Design, moving from handwritten code to model-based graphical executable representation, can be applied to the testing arena to develop better and more efficient tests. To make the testing process efficient, the test tool should be able to not just execute tests, but organize the test results and present them in a manner easily understood by the end user. The user should be easily able to select tests to be executed and visualize execution results of those tests without need of external - ata analysis and reporting tools. A user should also be able to gather data related to test execution for reporting on overall software quality metrics. In the case of real-time embedded systems, the traditional approach for software testing of test execution, data capture, analysis and reporting creates a lot of inefficiency and repeated testing. A new approach to run test evaluation in parallel to test execution, using the so-called real-time testing solution, eliminates these inefficiencies and results in significant gains in testing time and improving utilization of the test infrastructure. Globalized, distributed development environments may lead to organizations adopting a variety of tool chains and test platforms. Therefore, to gain efficiency, it is desired that the test automation solution should offer easy integration with other third-party test platforms and be independent of the hardware to protect the investment in the long run. Basing such integration interface on established standards gives the user freedom to make choices. Some standards, such as {HIL} {API} from {ASAM}, are being proposed for test systems in the automotive industry. The paper reviews applicability and benefits of such standards. Various industry standards, such as automotive functional safety standard {ISO} 26262, {IEC} 61508, {IEC} 62304 and {DO}-178C, have addressed requirements for software testing and test tools. It is therefore critical that the selected test automation tool provide support for the prescribed methods and support the standard compliant development process. Tool qualification is a critical topic addressed by these standards and is discussed in this paper. Further, increasingly important requirements such as integration with the overall software development process, management of tests and test data, test reusability, hardware platform independence, test development and execution efficiency, etc. are discussed.},
	booktitle = {2013 {IEEE} {AUTOTESTCON}},
	author = {Bansal, A. and Muli, M. and Patil, K.},
	month = sep,
	year = {2013},
	keywords = {automated software testing, Automated Testing, Automatic testing, Automation, Complexity theory, comprehensive automated testing tool, electronic control units, hardware platform, {HIL}, Industries, mechatronics, mechatronic systems, model based design, model based graphical execution, product development environment, real-time embedded syste, Real-time systems, real time testing solution, Software, software testing tools, standards, test asset reuse, test automation tools, Testing, testing complexity, testing efficiency, test reusability, test standard},
	pages = {1--6},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\HGWSUGWJ\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\BBQW4FUH\\Bansal et al. - 2013 - Taming complexity while gaining efficiency Requir.pdf:application/pdf}
}

@book{spillner_basiswissen_2003,
	address = {Heidelberg},
	edition = {1. Aufl.},
	title = {Basiswissen Softwaretest},
	isbn = {3-89864-178-3},
	publisher = {dpunkt-Verl.},
	author = {Spillner, Andreas},
	year = {2003},
	file = {OPAC der Hochschule München:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\BRKJ2KR2\\singleHit.html:text/html}
}

@book{rudolph_servicebasierte_2009,
	title = {Servicebasierte Planung und Steuerung Der {IT}-Infrastruktur Im Mittelstand: Ein Modellansatz Zur Struktur Der {IT}-Leistungserbringung},
	isbn = {9783834984715},
	shorttitle = {Servicebasierte Planung und Steuerung Der {IT}-Infrastruktur Im Mittelstand},
	abstract = {Simone Rudolph entwickelt ein umfassendes Modell zur servicebasierten Planung und Steuerung der {IT}-Infrastruktur, das einen konkreten Lösungsansatz für den Anwendungskontext mittelständischer Unternehmen liefert.},
	language = {de},
	publisher = {Springer {DE}},
	author = {Rudolph, Simone},
	month = dec,
	year = {2009},
	keywords = {Business \& Economics / Information Management}
}

@misc{developer_anwendungen_????,
	title = {Anwendungen mit Docker transportabel machen},
	url = {http://www.heise.de/developer/artikel/Anwendungen-mit-Docker-transportabel-machen-2127220.html?artikelseite=2},
	abstract = {Jede Anwendung hat Abhängigkeiten. Die Palette reicht von der Konfiguration des lokalen Betriebssystems bis zur Integration von Netzwerk- und Webdiensten. Das erschwert das Verteilen von Anwendungen auf unterschiedliche Systeme. Das Open-Source-Werkzeug Docker verspricht Abhilfe.},
	urldate = {2014-04-10},
	journal = {heise Developer},
	author = {Developer, heise},
	note = {Jede Anwendung hat Abhängigkeiten. Die Palette reicht von der Konfiguration des lokalen Betriebssystems bis zur Integration von Netzwerk- und Webdiensten. Das erschwert das Verteilen von Anwendungen auf unterschiedliche Systeme. Das Open-Source-Werkzeug Docker verspricht Abhilfe.},
	keywords = {Container, docker},
	file = {Snapshot:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\MERVNQCQ\\Anwendungen-mit-Docker-transportabel-machen-2127220.html:text/html}
}

@misc{center_for_history_and_new_media_schnelleinstieg_????,
	title = {Schnelleinstieg},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}},
	annote = {Willkommen bei Zotero!
Anhand des Schnelleinstiegs lässt sich das Sammeln, Handhaben, Zitieren und Teilen von Quellen erlernen.
Vielen Dank, dass Sie Zotero installiert haben.}
}

@misc{dotcloudtv_future_2013,
	title = {The future of Linux Containers},
	url = {http://www.youtube.com/watch?v=wW9CAH9nSLs&feature=youtube_gdata_player},
	abstract = {At {PyCon} Solomon Hykes shows docker to the public for the first time.},
	urldate = {2014-04-10},
	collaborator = {{dotcloudtv}},
	month = mar,
	year = {2013}
}

@book{vigenschow_objektorientiertes_2005,
	address = {Heidelberg},
	edition = {1. Aufl.},
	title = {Objektorientiertes Testen und Testautomatisierung in der Praxis},
	isbn = {3-89864-305-0},
	publisher = {dpunkt-Verl.},
	author = {Vigenschow, Uwe},
	year = {2005},
	file = {OPAC der Hochschule München:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\RN9NRADN\\singleHit.html:text/html}
}

@misc{twitter_university_introduction_2013,
	title = {Introduction to Docker},
	url = {http://www.youtube.com/watch?v=Q5POuMHxW-0&feature=youtube_gdata_player},
	abstract = {{dotCloud} founder and {CTO} Solomon Hykes recently stopped by Twitter {HQ} to show us Docker, an open source project designed to easily create lightweight, portable, self-sufficient containers from any application.

Common use cases for Docker include:

* Automating the packaging and deployment of applications
* Creation of lightweight, private {PAAS} environments
* Automated testing and continuous integration/deployment
* Deploying and scaling web apps, databases and backend services

Check out docker.io for all the official goodies, and follow Solomon at http://twitter.com/solomonstre},
	urldate = {2014-04-10},
	collaborator = {{Twitter University}},
	month = oct,
	year = {2013}
}

@inproceedings{amannejad_search-based_2014,
	title = {A Search-Based Approach for Cost-Effective Software Test Automation Decision Support and an Industrial Case Study},
	doi = {10.1109/ICSTW.2014.34},
	abstract = {Test automation is a widely-used approach to reduce the cost of manual software testing. However, if it is not planned or conducted properly, automated testing would not necessarily be more cost effective than manual testing. Deciding what parts of a given System Under Test ({SUT}) should be tested in an automated fashion and what parts should remain manual is a frequently-asked and challenging question for practitioner testers. In this study, we propose a search-based approach for deciding what parts of a given {SUT} should be tested automatically to gain the highest Return On Investment ({ROI}). This work is the first systematic approach for this problem, and significance of our approach is that it considers automation in the entire testing process (i.e., from test-case design, to test scripting, to test execution, and test-result evaluation). The proposed approach has been applied in an industrial setting in the context of a software product used in the oil and gas industry in Canada. Among the results of the case study is that, when planned and conducted properly using our decision-support approach, test automation provides the highest {ROI}. In this study, we show that if automation decision is taken effectively, test-case design, test execution, and test evaluation can result in about 307\%, 675\%, and 41\% {ROI} in 10 rounds of using automated test suites.},
	booktitle = {2014 {IEEE} Seventh International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
	author = {Amannejad, Y. and Garousi, V. and Irving, R. and Sahaf, Z.},
	month = mar,
	year = {2014},
	keywords = {action research, Automation, Context, cost-benefit analysis, cost-effective software test automation decision support approach, cost reduction, gas industry, industrial case study, investment, Manuals, oil industry, Optimization, program testing, return on investment, {ROI}, search-based approach, search-based software engineering, Software, software product, software product lines, software test automation, Software testing, {SUT}, system under test, test-case design, test evaluation, test execution},
	pages = {302--311},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\K8P44BJ8\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\4DC3EHVU\\Amannejad et al. - 2014 - A Search-Based Approach for Cost-Effective Softwar.pdf:application/pdf}
}

@inproceedings{harrold_testing:_2000,
	address = {New York, {NY}, {USA}},
	series = {{ICSE} '00},
	title = {Testing: A Roadmap},
	isbn = {1-58113-253-0},
	shorttitle = {Testing},
	url = {http://doi.acm.org/10.1145/336512.336532},
	doi = {10.1145/336512.336532},
	urldate = {2014-10-28},
	booktitle = {Proceedings of the Conference on The Future of Software Engineering},
	publisher = {{ACM}},
	author = {Harrold, Mary Jean},
	year = {2000},
	pages = {61--72},
	file = {ACM Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\EQMVHSZS\\Harrold - 2000 - Testing A Roadmap.pdf:application/pdf}
}

@inproceedings{xiaochun_test_2008,
	title = {A test automation solution on {GUI} functional test},
	doi = {10.1109/INDIN.2008.4618325},
	abstract = {Although it is widely believed that software quality will be improved by the use of automated testing, automation is still not well-off in industry today. There are quite a few issues of traditional software test automation mode, for example, high cost, knowledge barriers, and management troubles. In the paper, a test automation solution on {GUI} functional test is proposed. The solution integrates test case generation and selection, test case execution, and test reporting to facilitate testing. It introduces the concept of test driver which is designed to take over the communication between test cases and the execution engine. At last, some enhancements are proposed for future work.},
	booktitle = {6th {IEEE} International Conference on Industrial Informatics, 2008. {INDIN} 2008},
	author = {Xiaochun, Zhu and Bo, Zhou and Juefeng, Li and Qiu, Gao},
	month = jul,
	year = {2008},
	keywords = {automated software testing, Automatic testing, Computer industry, Costs, Design automation, Educational institutions, Engines, graphical user interfaces, {GUI} functional testing, program testing, Quality management, software quality, Software testing, test case execution, test case generation, test case selection, test driver, test reporting},
	pages = {1413--1418},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\XXFUUTJ9\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\GIDXIZNC\\Xiaochun et al. - 2008 - A test automation solution on GUI functional test.pdf:application/pdf}
}

@book{seidl_basiswissen_2012,
	address = {Heidelberg},
	edition = {1. Aufl.},
	title = {Basiswissen Testautomatisierung / Richard Seidl ; Manfred Baumgartner ; Thomas Bucsics},
	isbn = {978-3-89864-724-3},
	publisher = {dpunkt-Verl.},
	author = {Seidl, Richard},
	year = {2012},
	file = {DNB, Katalog der Deutschen Nationalbibliothek:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\BMBBCPSF\\opac.htm\;jsessionid=F4D0B30606E625D626658326B84285D7.html:text/html}
}

@misc{alexander_holbreich_14._marz_2014_at_12:56_-_antworten_von_????,
	title = {Von starken Hafenarbeitern und leichten Containern},
	url = {http://www.holisticon.de/2014/03/von-starken-hafenarbeitern-und-leichten-containern/},
	abstract = {Infrastructure as Code ({IaC}) ist ein mächtiges Werkzeug, das im Rahmen der {DevOps}-Bewegung die Entwicklung und den Betrieb näher zusammenbringt. Es ermöglicht vor allem das automatisierte Aufsetzen von Laufzeitumgebungen – von der Entwicklungs- bis hin zur Produktionsumgebung. Häufig werden bei der Umsetzung von {IaC} Virtuelle Maschinen und Werkzeuge wie Chef, Puppet und Vagrant zu deren Provis ...},
	urldate = {2014-04-10},
	journal = {Holisticon},
	author = {Alexander Holbreich 14. März 2014 at 12:56 - Antworten},
	file = {Snapshot:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\QMHZKHH5\\von-starken-hafenarbeitern-und-leichten-containern.html:text/html}
}

@book{teichreber_praktische_2008,
	title = {Praktische Software-Qualitätssicherung: Leitfaden für Testorganisation und -dokumentation},
	isbn = {9783939707400},
	shorttitle = {Praktische Software-Qualitätssicherung},
	language = {de},
	publisher = {Symposion Publishing {GmbH}},
	author = {Teichreber, Peter E.},
	year = {2008}
}

@book{_practical_????,
	title = {{PRACTICAL} {SOFTWARE} {TESTING}},
	isbn = {9788181280893},
	language = {Englisch}
}

@inproceedings{cervantes_exploring_2009,
	title = {Exploring the use of a test automation framework},
	doi = {10.1109/AERO.2009.4839695},
	abstract = {It is known that software testers, more often than not, lack the time needed to fully test the delivered software product within the time period allotted to them. When problems in the implementation phase of a development project occur, it normally causes the software delivery date to slide. As a result, testers either need to work longer hours, or supplementary resources need to be added to the test team in order to meet aggressive test deadlines. One solution to this problem is to provide testers with a test automation framework to facilitate the development of automated test solutions. The benefits of test automation are most apparent in big software projects. The development of automated test cases requires a lot of effort and time during the first test campaign, but there is a significant amount of time that can be saved with each repetition. Test automation gives a software tester the possibility of achieving unattended testing capability. With end-to-end test automation, a tester can schedule tests to run autonomously. While tests are running, testers can utilize the time saved by performing any requisite manual testing, or developing additional automated test cases to increase test coverage. Automated testing saves time as it provides the capability to perform concurrent/parallel testing. A tester can run multiple tests at the same time, whereas manual tests only allow for sequential test runs. If test automation is employed, testing does not have to end when the workday ends; automated testing can be exercised 24times7. A test automation framework can provide numerous benefits to a software tester. A test automation framework provides the basic set of software tools and services that can aid testers as they develop automated test cases. With a test automation framework, software testers can focus on testing the software product instead of worrying about developing the infrastructure needed to support their test environment. When choosing or developing a tes- t automation framework, it is important to understand all the different components of an organization's software system. A good test automation framework should be general enough to provide functions that help a tester create automated tests for all the different components of the delivered software system. The framework should also be easily extensible so it can evolve as the software system evolves. Whether creating one from scratch or using a commercial product, having a test automation framework available for test teams to use can help streamline the process of developing automated test solutions.},
	booktitle = {2009 {IEEE} Aerospace conference},
	author = {Cervantes, A.},
	month = mar,
	year = {2009},
	keywords = {automated test solutions, Automatic testing, Automation, concurrent-parallel testing, development project, end-to-end test automation, Laboratories, Performance evaluation, program testing, Propulsion, Scheduling, Sequential analysis, software product, software projects, Software systems, software testers, Software testing, software tools, System testing, test automation framework, unattended testing capability},
	pages = {1--9},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\GMWSZ5XD\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\HM6X5VVN\\Cervantes - 2009 - Exploring the use of a test automation framework.pdf:application/pdf}
}

@misc{developer_qualitatssicherung_????,
	title = {Qualitätssicherung ausgewogen},
	url = {http://www.heise.de/developer/artikel/Qualitaetssicherung-ausgewogen-1792246.html?artikelseite=2},
	abstract = {Eine zentrale Maßnahme zur Sicherung der Qualität während der Softwareentwicklung ist das Testen. Wichtig ist hierbei eine passende Mischung aus automatisierten und manuell durchgeführten Tests zu finden - Techniken wie {TDD} und {ATDD} können helfen.},
	urldate = {2014-10-13},
	journal = {heise Developer},
	author = {Developer, heise},
	note = {Eine zentrale Maßnahme zur Sicherung der Qualität während der Softwareentwicklung ist das Testen. Wichtig ist hierbei eine passende Mischung aus automatisierten und manuell durchgeführten Tests zu finden - Techniken wie {TDD} und {ATDD} können helfen.},
	keywords = {Test},
	file = {Snapshot:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\VCUDPXRS\\Qualitaetssicherung-ausgewogen-1792246.html:text/html}
}

@inproceedings{wang_test_2012,
	title = {A Test Automation Framework Based on {WEB}},
	doi = {10.1109/ICIS.2012.21},
	abstract = {Many software applications today are written as web-based applications to be run in an Internet browser. Selenium is a set of powerful different software tools working with many browsers, operating systems, programming languages, and testing frameworks each with a different approach to supporting automation test for testing web-based applications. {JMeter} is used to simulate a heavy load on a server, network or object to test its strength or to analyze overall performance under different load types. {JMeter} operates at the protocol-level, on the other hand, Selenium works at the user-level. In this paper, authors have designed an automatic software testing framework for web applications based on the Selenium and {JMeter}. With the use of the software framework, we efficiently improve the extensibility and reusability of automated test. The results show that the new software framework improves software products quality and develop efficiency. This paper also illustrates how to design web-based test automation framework in details.},
	booktitle = {2012 {IEEE}/{ACIS} 11th International Conference on Computer and Information Science ({ICIS})},
	author = {Wang, Fei and Du, Wencai},
	month = may,
	year = {2012},
	keywords = {automatic software testing framework, Automation, automation testing framework, Browsers, Internet, Internet browser, {JMeter}, Keywords-selenium, Loading, online front-ends, operating systems, product quality, programming languages, program testing, protocols, Selenium, Servers, Software, software applications, software reusability, software tools, Testing, web, Web-based application, Web-based test automation framework, {XML}},
	pages = {683--687},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\7RUS2PGQ\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\KECP3QQH\\Wang und Du - 2012 - A Test Automation Framework Based on WEB.pdf:application/pdf}
}

@inproceedings{xiaochun_test_2008-1,
	title = {A test automation solution on {GUI} functional test},
	doi = {10.1109/INDIN.2008.4618325},
	abstract = {Although it is widely believed that software quality will be improved by the use of automated testing, automation is still not well-off in industry today. There are quite a few issues of traditional software test automation mode, for example, high cost, knowledge barriers, and management troubles. In the paper, a test automation solution on {GUI} functional test is proposed. The solution integrates test case generation and selection, test case execution, and test reporting to facilitate testing. It introduces the concept of test driver which is designed to take over the communication between test cases and the execution engine. At last, some enhancements are proposed for future work.},
	booktitle = {6th {IEEE} International Conference on Industrial Informatics, 2008. {INDIN} 2008},
	author = {Xiaochun, Zhu and Bo, Zhou and Juefeng, Li and Qiu, Gao},
	month = jul,
	year = {2008},
	keywords = {automated software testing, Automatic testing, Computer industry, Costs, Design automation, Educational institutions, Engines, graphical user interfaces, {GUI} functional testing, program testing, Quality management, software quality, Software testing, test case execution, test case generation, test case selection, test driver, test reporting},
	pages = {1413--1418},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\SG5725ND\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\S4QJN8ST\\Xiaochun et al. - 2008 - A test automation solution on GUI functional test.pdf:application/pdf}
}

@inproceedings{ramler_economic_2006,
	address = {New York, {NY}, {USA}},
	series = {{AST} '06},
	title = {Economic Perspectives in Test Automation: Balancing Automated and Manual Testing with Opportunity Cost},
	isbn = {1-59593-408-1},
	shorttitle = {Economic Perspectives in Test Automation},
	url = {http://doi.acm.org/10.1145/1138929.1138946},
	doi = {10.1145/1138929.1138946},
	urldate = {2014-10-28},
	booktitle = {Proceedings of the 2006 International Workshop on Automation of Software Test},
	publisher = {{ACM}},
	author = {Ramler, Rudolf and Wolfmaier, Klaus},
	year = {2006},
	keywords = {Automated Testing, benefits and costs of automation, manual testing, testing economics},
	pages = {85--91},
	file = {Economic Perspectives in Test Automation\: Balancing Automated and Manual Testing with Opportunity Cost - p85.pdf:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\CW39KC65\\p85.pdf:application/pdf}
}

@misc{schroder_container-virtualisierung_2014,
	title = {Container-Virtualisierung mit Docker},
	url = {http://media.itm.uni-luebeck.de/teaching/ws2013/sem-cloud-computing/Container-Virtualisierung_mit_Docker.pdf},
	author = {Schröder, Christoph},
	month = apr,
	year = {2014}
}